20220304 - ikth-v11-ssrwebpack-psql-auth0-2022
-version11: webpack SSR / react-router / postresql (heroku version) / Auth0 / docker-compose / typescript / nodejs / expressjs

================ LEFT OFF 20220220
-test out Auth0 library
	-sign up to Auth0
		-CCC I already signup to Auth0 but need to place the info within both em word doc
			-info is below in the PLAYGROUND section

================ DONE
-check for any outdated modules & update if any

-FAIL- convert webpack into SSR		//this will detemine if I can use ssr webpack for upcoming PERN bug tracker project
	-check online to see how to do it & follow their steps if need be
	-CANNOT BE DONE EASILY SO I CHANGE TO CSR

-create fullstack directory
	-create frontend & ensure everything is working
	-create backend & ensure everything is working

-create a simple request for the frontend to collect from the backend

-use docker
	-create Dockerfile first
	-create docker-compose.yml file
	-test if the request call is working according for fullstack

-create Github Actions to deploy on your heroku account
	-ensure everything is working accordingly

-SKIP- test out for nodejs server api route before react client (*) route & see if nodejs route works as normal
	-iK you are just seeing if it works otherwise move onto the next step

-SKIP- use react-router			//this must work if I want to use ssr webpack for upcoming PERN bug tracker project
	-create a quick simple route & see if the route works using webpack SSR
		-decide what steps you should take next depending on the result

-install webpack dotenv so that you can easily switch between localhost & real url for fetching

-test out postgreSQL			//this must work if I want to use upcoming project PERN bug tracker 
	-set up using your local psql & install the necessary library
	-test with some simple SQL CRUD
	-see if it works on heroku live site
		-iK it should not work because we are using our local psql which cannot be reach on live server
	-now configure psql using heroku version of PSQL
	-see if it works on heroku live site

================ TODO
-test out Auth0 library
	-sign up to Auth0
	-setup & test out on dev server
		-testing auth0 on serverside
		-testing auth0 on client side
	-reset routes for SS & CS & decide which method to go best with
	-commit to heroku & see if it works on live site

-uncomment cors function so that only select domain can access your server

-do remaining COME BACK

-check up on snyk recommendations

-do lighthouse testing

-do remaining WRITE IN YOUR NOTE DOC

-check if repo name needs changing
	- ikth-v11-ssrwebpack-psql-auth0-2022
		to ikth-v11-fs-csrwebpack-psql-auth0-2022

-README.md file

-git commit & see deploy build was a success

================ COME BACK

================ SKIPPED TODOS

================ WRITE IN YOUR NOTE DOC

================ NOTE TO SELF
-webpack ssr is tricky to do so I left it & will probaby use next.js for ssr from now on

================ MISSION
version11: webpack SSR / react-router / postresql (heroku version) / Auth0 / docker-compose / typescript / nodejs / 
- test out webpack SSR

- test a simple full stack app on heroku using docker-compose & ensure it is fetching data as it should

- test different routes for the api before it reach the * route which should be for the client only
	-this will let me know if webpack sst requires react-router or not

-test out postgresql (heroku version in particular)

- use Auth0 library too if you can

================ PLAYGROUND

